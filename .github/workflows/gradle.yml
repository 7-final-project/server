name: CI/CD 워크플로우

on:
  push:
    branches:
      - "develop"
      - "main"
  pull_request:
    branches:
      - "develop"

permissions:
  checks: write
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 원격 저장소에서 코드 가져오기
      - name: 코드 가져오기 (Checkout)
        uses: actions/checkout@v4

      # 2. JDK 17 설정
      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. gradlew 실행 권한 부여
      - name: Gradle Wrapper 실행 권한 설정
        run: chmod +x ./gradlew

      # 4. Gradle 빌드 실행 (테스트 생략)
      - name: Gradle 빌드 실행 (테스트 생략)
        run: ./gradlew build -x test
        if: github.ref_name == 'develop' || github.ref_name == 'main'

      # 5. Docker 이미지 빌드 및 Docker Hub로 푸시 (main 브랜치에서만 실행)
      - name: Docker 이미지 빌드 및 푸시
        if: github.ref_name == 'main'
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/qring .
          docker push ${{ secrets.DOCKER_USERNAME }}/qring

      # 6. 서버에 배포 (main 브랜치에서만 실행)
      - name: 서버에 배포
        if: github.ref_name == 'main'
        uses: appleboy/ssh-action@master
        id: deploy
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/qring
            docker stop $(docker ps -a -q)
            docker run -d --log-driver=syslog -p 19000:19001 ${{ secrets.DOCKER_USERNAME }}/qring
            docker rm $(docker ps --filter 'status=exited' -a -q)
            docker image prune -a -f
